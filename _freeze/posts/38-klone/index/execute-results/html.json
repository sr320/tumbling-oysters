{
  "hash": "09bf781cf7812e17266ae37f4f01e6ec",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Please Klone me\"\ndescription: \"Getting on the Rstudio Klone Machine\"\ncategories: [hyak, hpc, rstudio]\n#citation: \ndate: 02-19-2025\nimage: http://gannet.fish.washington.edu/seashell/snaps/Monosnap_sr320__sr320klone-login03__ssh_klone.hyak.uw.edu__9830_2025-02-20_09-08-29.png # finding a good image\n\nauthor:\n  - name: Steven Roberts\n    url: \n    orcid: 0000-0001-8302-1138\n    affiliation: Professor, UW - School of Aquatic and Fishery Sciences\n    affiliation-url: https://robertslab.info\n  #url:  # self-defined\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: FALSE\n    code-tools: true\n    code-copy: true\n    highlight-style: github\n    code-overflow: wrap\n---\n\n\n\n\n\nLet's get everyone up an running with Klone and RStudio.\n\n# Log in\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nsr320@Stevens-MacBook-Air-184 ~ % ssh sr320@klone.hyak.uw.edu\n(sr320@klone.hyak.uw.edu) Password: \n(sr320@klone.hyak.uw.edu) Duo two-factor login for sr320\n\nEnter a passcode or select one of the following options:\n\n 1. Duo Push to XXX-XXX-3626\n 2. Duo Push to iOS\n 3. Phone call to XXX-XXX-3626\n\nPasscode or option (1-3): 1\n```\n:::\n\n\n\n# CD to srlab directory\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ncd /gscratch/srlab/\n\n```\n:::\n\n\n\nCreate user directory in srlab (if not present)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nmkdir sr320\n```\n:::\n\n\n\n# Add containers to your local directory\n\n```         \n-rwxr-xr-x 1 samwhite all   3311583232 2024-12-04 srlab-bioinformatics-container-09dfcb2.sif\n-rwxrwxr-x 1 samwhite srlab 2985074688 2024-10-17 srlab-bioinformatics-container-2bd5d44.sif\n-rwxr-xr-x 1 samwhite all   3008335872 2024-11-06 srlab-bioinformatics-container-586bf21.sif\n-rwxr-xr-x 1 samwhite all   3008442368 2024-11-07 srlab-bioinformatics-container-f4142f4.sif\n-rwxr-xr-x 1 samwhite all   3380895744 2025-01-04 srlab-R4.4-bioinformatics-container-703094b.sif\n```\n\nSpecifically `srlab-R4.4-bioinformatics-container-703094b.sif`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n#within user directory\ncp ../containers/srlab-R4.4-bioinformatics-container-703094b.sif . \n```\n:::\n\n\n\n\n\n\n\n# Generate SLURM\n\n::: callout-warning\nUsers should add the following line in `~/.Renviron`. If you don't have a `~/.Renviron`, you can create it like this: `touch ~/.Renviron`\n\n      \n-   `R_LIBS_USER` in `~/.Renviron`. Example:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ncat ~/.Renviron\n# Set local library installation path\nR_LIBS_USER=/gscratch/srlab/${USER}/R_libs_apptainer\n```\n:::\n\n\n\n:::\n\nThis configuration directs R to install and access packages from a custom directory rather than the system-wide library, which is especially useful in shared or containerized environments.\n\n\n\n# Copy SLURM JOB SCRIPT\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ncp ../sr320/rstudio-server.job .\n```\n:::\n\n\n\n\n::: callout-warning\n-   User needs to (maybe) set/change the following in the SLURM script before starting script:\n\n    -    `#SBATCH --partition=`\n    \n    -   `#SBATCH --time=`\n\n    -   `#SBATCH --mem=`\n\n    -   `--chdir=`\n    \n    -   `RSTUDIO_CWD=\"/gscratch/srlab/sr320\" # UPDATE THIS LINE`\n    \n    -   `RSTUDIO_SIF=\"srlab-R4.4-bioinformatics-container-703094b.sif\" # UPDATE THIS LINE`\n:::\n\nOpen\n\n```         \nnano rstudio-server.job\n```\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n#!/bin/sh\n\n#SBATCH --job-name=rstudio-server\n#SBATCH --account=srlab\n#SBATCH --partition=cpu-g2-mem2x #update this line - use hyakalloc to find partitions you can use\n#SBATCH --time=15-08:00:00\n#SBATCH --ntasks=1              # Number of tasks\n#SBATCH --cpus-per-task=12     # Increased threads from 4 to 8\n#SBATCH --nodes=1\n#SBATCH --mem=100G\n#SBATCH --signal=USR2\n#SBATCH --output=%x_%j.out\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/srlab/sr320\n\n# This script will request a single CPU with four threads with 20GB of RAM for 2 hours. \n# You can adjust --time, --nodes, --ntasks, and --mem above to adjust these settings for your session.\n\n# --output=%x_%j.out creates a output file called rstudio-server_NNNNNNNN.out \n# where the %x is short hand for --job-name above and the N's are an 8-digit \n# jobID assigned by SLURM when our job is submitted.\n\nRSTUDIO_CWD=\"/gscratch/srlab/sr320\" # UPDATE THIS LINE\nRSTUDIO_SIF=\"srlab-R4.4-bioinformatics-container-703094b.sif\" # UPDATE THIS LINE\n\n\n# Create temp directory for ephemeral content to bind-mount in the container\nRSTUDIO_TMP=$(/usr/bin/python3 -c 'import tempfile; print(tempfile.mkdtemp())')\n\nmkdir -p -m 700 \\\n        ${RSTUDIO_TMP}/run \\\n        ${RSTUDIO_TMP}/tmp \\\n        ${RSTUDIO_TMP}/var/lib/rstudio-server\n\ncat > ${RSTUDIO_TMP}/database.conf <<END\nprovider=sqlite\ndirectory=/var/lib/rstudio-server\nEND\n\n# Set OMP_NUM_THREADS to prevent OpenBLAS (and any other OpenMP-enhanced\n# libraries used by R) from spawning more threads than the number of processors\n# allocated to the job.\n#\n# Set R_LIBS_USER to a path specific to rocker/rstudio to avoid conflicts with\n# personal libraries from any R installation in the host environment\n\ncat > ${RSTUDIO_TMP}/rsession.sh <<END\n#!/bin/sh\n\nexport OMP_NUM_THREADS=${SLURM_JOB_CPUS_PER_NODE}\nexport R_LIBS_USER=${RSTUDIO_CWD}/R\nexec /usr/lib/rstudio-server/bin/rsession \"\\${@}\"\nEND\n\nchmod +x ${RSTUDIO_TMP}/rsession.sh\n\nexport APPTAINER_BIND=\"${RSTUDIO_CWD}:${RSTUDIO_CWD},/gscratch:/gscratch,${RSTUDIO_TMP}/run:/run,${RSTUDIO_TMP}/tmp:/tmp,${RSTUDIO_TMP}/database.conf:/etc/rstudio/database.conf,${RSTUDIO_TMP}/rsession.sh:/etc/rstudio/rsession.sh,${RSTUDIO_TMP}/var/lib/rstudio-server:/var/lib/rstudio-server\"\n\n# Do not suspend idle sessions.\n# Alternative to setting session-timeout-minutes=0 in /etc/rstudio/rsession.conf\nexport APPTAINERENV_RSTUDIO_SESSION_TIMEOUT=0\n\nexport APPTAINERENV_USER=$(id -un)\nexport APPTAINERENV_PASSWORD=$(openssl rand -base64 15)\n\n# get unused socket per https://unix.stackexchange.com/a/132524\n# tiny race condition between the python & apptainer commands\nreadonly PORT=$(/mmfs1/sw/pyenv/versions/3.9.5/bin/python -c 'import socket; s=socket.socket(); s.bind((\"\", 0)); print(s.getsockname()[1]); s.close()')\ncat 1>&2 <<END\n1. SSH tunnel from your workstation using the following command:\n\n   ssh -N -L 8787:${HOSTNAME}:${PORT} ${APPTAINERENV_USER}@klone.hyak.uw.edu\n\n   and point your web browser to http://localhost:8787\n\n2. log in to RStudio Server using the following credentials:\n\n   user: ${APPTAINERENV_USER}\n   password: ${APPTAINERENV_PASSWORD}\n\nWhen done using RStudio Server, terminate the job by:\n\n1. Exit the RStudio Session (\"power\" button in the top right corner of the RStudio window)\n2. Issue the following command on the login node:\n\n      scancel -f ${SLURM_JOB_ID}\nEND\n\nsource /etc/bashrc\nmodule load apptainer\n\napptainer exec --cleanenv --home ${RSTUDIO_CWD} ${RSTUDIO_CWD}/${RSTUDIO_SIF} \\\n    rserver --www-port ${PORT} \\\n            --auth-none=0 \\\n            --auth-pam-helper-path=pam-helper \\\n            --auth-stay-signed-in-days=30 \\\n            --auth-timeout-minutes=0 \\\n            --rsession-path=/etc/rstudio/rsession.sh \\\n            --server-user=${APPTAINERENV_USER}\n\nAPPTAINER_EXIT_CODE=$?\necho \"rserver exited $APPTAINER_EXIT_CODE\" 1>&2\nexit $APPTAINER_EXIT_CODE\n\n```\n:::\n\n\n\n\n\n# Run\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nsbatch rstudio-server.job\n```\n:::\n\n\n\n\n\n# Footnotes\n\n```\nsrlab-bioinformatics-container-<git commit hash>.sif: A \"catch-all\" container which holds most of the commonly used bioinformatics software\nused by the Roberts Lab. The <git commit hash> is taken from the definition file used to construct the container. The definition file can be found at\n/gscratch/srlab/gitrepos/RobertsLab/code/apptainer_definition_files/srlab-bioinformatics-container.def.\n```\n\n## Definition File\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n[sr320@klone-login03 containers]$ cat /gscratch/srlab/gitrepos/RobertsLab/code/apptainer_definition_files/srlab-bioinformatics-container.def\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n# NOTE:\n# To use RepeatMasker with this container, RepeatMasker must be installed on the local computer in the following location:\n#\n# /gscratch/srlab/programs/RepeatMasker\n# \n# RepeatMasker must be configured on the local computer prior to running via this container.\n# The container expects the following files:\n#\n# /gscratch/srlab/programs/RepeatMasker/Libraries/famdb/dfam38_full.0.h5\n# /gscratch/srlab/programs/RepeatMasker/Libraries/famdb/rmlib.config\n\n\nBootstrap: docker\nFrom: rocker/rstudio:4.4.1\n%files\n    # Load file with R package installation commands in to container at /tmp\n    # Expects file called \"r_packages_installs.R\" to be in current directory.\n    r_packages_installs.R /tmp/\n\n%setup\n\n\n%environment\n    ### Set program locations/versions for system PATH ###\n    programs_location=\"/srlab/programs\"\n    bismark_version=\"0.24.2\"\n    bowtie2_version=\"2.5.4\"\n    diamond_version=\"2.1.9\"\n    fastp_version=\"0.23.4\"\n    fastqc_version=\"0.12.1\"\n    gffcompare_version=\"gffcompare-0.12.6\"\n    hisat2_version=\"2.2.1\"\n    kallisto_version=\"0.51.1\"\n    miniforge_version=\"24.7.1-0\"\n    multiqc_version=\"1.24.1\"\n    ncbi_blast_version=\"2.16.0\"\n    ncbi_datasets_version=\"13.34.0\"\n    repeatmasker_version=\"4.1.7-p1\"\n    rmblast_version=\"2.14.1\"\n    salmon_version=\"1.10.0\"\n    samtools_version=\"1.20\"\n    stringtie_version=\"2.2.1\"\n    trimmomatic_version=\"0.39\"\n\n    mamba_envs_dir=\"${programs_location}/miniforge3-${miniforge_version}/envs\"\n\n    ######################################################\n\n    export LC_ALL=C\n    \n    ### Set container system PATH ###\n    PATH=\"/usr/local/sbin:\\\n/usr/local/bin:\\\n/usr/sbin:\\\n/usr/bin:\\\n/sbin:\\\n/bin:\\\n${programs_location}:\\\n${programs_location}/Bismark-${bismark_version}:\\\n${programs_location}/bowtie2-${bowtie2_version}-sra-linux-x86_64:\\\n${programs_location}/fastqc-${fastqc_version}:\\\n${programs_location}/${gffcompare_version}:\\\n${programs_location}/hisat2-${hisat2_version}:\\\n${programs_location}/kallisto-${kallisto_version}/build/src:\\\n${programs_location}/miniforge3-${miniforge_version}/bin:\\\n${mamba_envs_dir}/multiqc_env/bin:\\\n${programs_location}/ncbi-blast-${ncbi_blast_version}+/bin:\\\n${programs_location}/ncbi-datasets-${ncbi_datasets_version}:\\\n${programs_location}/RepeatMasker:\\\n${programs_location}/rmblast-${rmblast_version}/bin:\\\n${programs_location}/salmon-latest_linux_x86_64/bin:\\\n${programs_location}/samtools-${samtools_version}:\\\n${programs_location}/stringtie-${stringtie_version}.Linux_x86_64:\\\n${programs_location}/Trimmomatic-${trimmomatic_version}:\\\n${programs_location}/trf409.linux64\"\n    ######################################################\n\n\n%post\n    # Install common/base libraries/dependencies\n    apt update && \\\n    apt install -y --no-install-recommends \\\n    apt-utils \\\n    aptitude \\\n    automake \\\n    build-essential \\\n    bzip2 \\\n    cmake \\\n    coreutils \\\n    curl \\\n    debconf \\\n    default-jdk \\\n    dialog \\\n    emboss \\\n    gcc-multilib \\\n    gdebi-core \\\n    gfortran \\\n    git \\\n    gobjc++ \\\n    hmmer \\\n    htop \\\n    infernal \\\n    libapparmor1 \\\n    libbz2-dev \\\n    libc6 \\\n    libcurl4-openssl-dev \\\n    libedit2 \\\n    libfontconfig1 \\\n    liblzma-dev \\\n    libncurses5-dev \\\n    libncurses-dev \\\n    libncursesw5-dev \\\n    libpango1.0-dev \\\n    libpng-dev \\\n    libreadline-dev \\\n    libsm6 \\\n    libsparsehash-dev \\\n    libssl-dev \\\n    liburi-escape-xs-perl \\\n    liburi-perl \\\n    libxml2 \\\n    libxrender1 \\\n    libz-dev \\\n    libbz2-dev \\\n    liblzma-dev \\\n    libxt6 \\\n    libxtst6 \\\n    libzmq3-dev \\\n    locales \\\n    locales-all \\\n    man \\\n    nano \\\n    ncurses-dev \\\n    net-tools \\\n    openssh-client \\\n    parallel \\\n    pkg-config \\\n    psmisc \\\n    python3 \\\n    python-setuptools \\\n    rsync \\\n    ruby \\\n    software-properties-common \\\n    sqlite3 \\\n    sudo \\\n    texinfo \\\n    tree \\\n    unzip \\\n    wget \\\n    xorg-dev \\\n    zlib1g-dev\n\n    # Run R package installation script file\n    Rscript /tmp/r_packages_installs.R\n\n    ########## Set program versions ##########\n\n    bedtools_version=\"v2.31.0\"\n    bismark_version=\"0.24.2\"\n    bowtie2_version=\"2.5.4\"\n    diamond_version=\"2.1.9\"\n    fastp_version=\"0.23.4\"\n    fastqc_version=\"0.12.1\"\n    gffcompare_version=\"gffcompare-0.12.6\"\n    hisat2_version=\"2.2.1\"\n    kallisto_version=\"0.51.1\"\n    miniforge_version=\"24.7.1-0\"\n    multiqc_version=\"1.24.1\"\n    ncbi_blast_version=\"2.16.0\"\n    ncbi_datasets_version=\"16.34.0\"\n    repeatmasker_version=\"4.1.7-p1\"\n    rmblast_version=\"2.14.1\"\n    salmon_version=\"1.10.0\"\n    stringtie_version=\"2.2.1\"\n    samtools_version=\"1.20\"\n    trimmomatic_version=\"0.39\"\n\n    ##########################################\n    \n\n    \n    # Set threads for faster builds\n    threads=\"40\"\n\n    # Make programs directory\n    mkdir --parents /srlab/programs\n\n    # Change to installation directory\n    cd /srlab/programs\n\n    #Install Miniforge (Conda/Mamba)\n    wget https://github.com/conda-forge/miniforge/releases/download/${miniforge_version}/Miniforge3-${miniforge_version}-Linux-x86_64.sh\n    bash Miniforge3-${miniforge_version}-Linux-x86_64.sh -b -p ./miniforge3-${miniforge_version}\n\n    export PATH=\"$PATH:/srlab/programs/miniforge3-${miniforge_version}/bin\"\n\n    mamba init\n    . ./miniforge3-${miniforge_version}/etc/profile.d/conda.sh\n\n    rm Miniforge3-${miniforge_version}-Linux-x86_64.sh\n\n    ## Configure conda channels\n    conda config --add channels defaults\n    conda config --add channels bioconda\n    conda config --add channels conda-forge\n    conda config --set channel_priority strict\n\n    # Install bedtools\n    wget https://github.com/arq5x/bedtools2/releases/download/${bedtools_version}/bedtools.static\n    mv bedtools.static bedtools\n    chmod a+x bedtools\n\n    # Install Bismark\n    wget https://github.com/FelixKrueger/Bismark/archive/refs/tags/v${bismark_version}.zip\n    unzip v${bismark_version}.zip\n    rm v${bismark_version}.zip\n\n    # Install bowtie2\n    wget https://github.com/BenLangmead/bowtie2/releases/download/v${bowtie2_version}/bowtie2-${bowtie2_version}-sra-linux-x86_64.zip\n    unzip bowtie2-${bowtie2_version}-sra-linux-x86_64.zip\n    rm bowtie2-${bowtie2_version}-sra-linux-x86_64.zip\n\n    # Install DIAMOND BLAST\n    wget https://github.com/bbuchfink/diamond/releases/download/v${diamond_version}/diamond-linux64.tar.gz\n    tar -xzvf diamond-linux64.tar.gz\n    rm diamond-linux64.tar.gz\n\n    # Install fastp\n    wget http://opengene.org/fastp/fastp.${fastp_version}\n    mv fastp.${fastp_version} fastp\n    chmod a+x ./fastp\n\n    # Install FastQC\n    wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v${fastqc_version}.zip\n    unzip fastqc_v${fastqc_version}.zip\n    mv FastQC fastqc-${fastqc_version}\n    rm fastqc_v${fastqc_version}.zip\n\n    # Install gffcompare\n    wget http://ccb.jhu.edu/software/stringtie/dl/${gffcompare_version}.Linux_x86_64.tar.gz\n    tar -xzvf ${gffcompare_version}.Linux_x86_64.tar.gz\n    rm ${gffcompare_version}.Linux_x86_64.tar.gz\n\n    # Install HISAT2\n    wget https://github.com/DaehwanKimLab/hisat2/archive/refs/tags/v${hisat2_version}.tar.gz\n    tar -xzvf v${hisat2_version}.tar.gz\n    cd hisat2-${hisat2_version}\n    make -j ${threads}\n    cd -\n    rm v${hisat2_version}.tar.gz\n\n    # Install kallisto\n    wget https://github.com/pachterlab/kallisto/archive/refs/tags/v${kallisto_version}.tar.gz\n    tar -xzvf v${kallisto_version}.tar.gz\n    cd kallisto-${kallisto_version}\n    mkdir build\n    cd build\n    cmake ..\n    make\n    cd /srlab/programs\n    rm v${kallisto_version}.tar.gz\n\n    # Install MultiQC\n    mamba create -n multiqc_env multiqc=1.24.1\n\n    # Install NCBI datasets\n    mkdir --parents ncbi-datasets-v${ncbi_datasets_version}\n\n    cd ncbi-datasets-v${ncbi_datasets_version}\n    \n    wget https://github.com/ncbi/datasets/releases/download/v16.34.0/linux-amd64.cli.package.zip \\\n    && unzip linux-amd64.cli.package.zip \\\n    && rm linux-amd64.cli.package.zip\n\n    cd /srlab/programs\n\n    # Install NCBI BLAST\n    wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/${ncbi_blast_version}/ncbi-blast-${ncbi_blast_version}+-x64-linux.tar.gz \\\n\t&& tar -zxvpf ncbi-blast-${ncbi_blast_version}+-x64-linux.tar.gz \\\n\t&& rm ncbi-blast-${ncbi_blast_version}+-x64-linux.tar.gz\n\n    # RepeatMasker conda environment with Python3 and h5py using mamba\n    mamba create -n repeatmasker-env python=3.8 h5py -y\n\n    # Install RepeatMasker\n    wget https://www.repeatmasker.org/RepeatMasker/RepeatMasker-${repeatmasker_version}.tar.gz\n    tar -xzvf RepeatMasker-${repeatmasker_version}.tar.gz\n    rm RepeatMasker-${repeatmasker_version}.tar.gz\n\n    ## Remove default RepeatMasker DB\n    rm /srlab/programs/RepeatMasker/Libraries/famdb/*\n\n    # Set up symlinks to RepeatMasker files on Klone\n    ln -s /gscratch/srlab/programs/RepeatMasker/Libraries/famdb/dfam38_full.0.h5 /srlab/programs/RepeatMasker/Libraries/famdb/dfam38_full.0.h5\n    ln -s /gscratch/srlab/programs/RepeatMasker/Libraries/famdb/rmlib.config /srlab/programs/RepeatMasker/Libraries/famdb/rmlib.config\n\n    # Install RMBLAST\n    wget https://www.repeatmasker.org/rmblast/rmblast-${rmblast_version}+-x64-linux.tar.gz\n    tar -xzvf rmblast-${rmblast_version}+-x64-linux.tar.gz\n    rm rmblast-${rmblast_version}+-x64-linux.tar.gz\n\n    # Install salmon\n    wget https://github.com/COMBINE-lab/salmon/releases/download/v${salmon_version}/salmon-${salmon_version}_linux_x86_64.tar.gz\n    tar -xzvf salmon-${salmon_version}_linux_x86_64.tar.gz\n    rm salmon-${salmon_version}_linux_x86_64.tar.gz\n\n    # Install samtools\n    wget https://github.com/samtools/samtools/releases/download/${samtools_version}/samtools-${samtools_version}.tar.bz2\n    tar -xjvf samtools-${samtools_version}.tar.bz2\n    cd samtools-${samtools_version}\n    ./configure\n    make -j ${threads}\n    cd -\n    rm samtools-${samtools_version}.tar.bz2\n\n    # Install trimmomatic\n    wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-${trimmomatic_version}.zip\n    unzip Trimmomatic-${trimmomatic_version}.zip\n    chmod +x -R Trimmomatic-${trimmomatic_version}\n    rm Trimmomatic-${trimmomatic_version}.zip\n\n    # Install StringTie\n    wget http://ccb.jhu.edu/software/stringtie/dl/stringtie-${stringtie_version}.Linux_x86_64.tar.gz\n    tar -xzvf stringtie-${stringtie_version}.Linux_x86_64.tar.gz\n    rm stringtie-${stringtie_version}.Linux_x86_64.tar.gz\n\n    # Install TRF\n    wget https://github.com/Benson-Genomics-Lab/TRF/releases/download/v4.09.1/trf409.linux64\n    chmod +x trf409.linux64\n\n\n\n\n%labels\n    Author Sam White\n    Version v0.0.5\n    \n\n%help\n    This is an Apptainer definition file for an Ubuntu container containing bioinformatics software for the Roberts Lab.\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}