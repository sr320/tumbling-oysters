{
  "hash": "14bef109b0d3416ca0a7e1ea601847db",
  "result": {
    "markdown": "---\ntitle: \"That escalated quickly\"\ndescription: \"going from 1 line script to cronning a sys log\"\ncategories: [cron, rsync, log] # self-defined categories\n#citation: \ndate: 05-27-2024\nimage: https://gannet.fish.washington.edu/seashell/snaps/IGV_2024-05-24_10-33-08.png # finding a good image\n\nauthor:\n  - name: Steven Roberts\n    url: \n    orcid: 0000-0001-8302-1138\n    affiliation: Professor, UW - School of Aquatic and Fishery Sciences\n    affiliation-url: https://robertslab.info\n  #url:  # self-defined\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n    code-copy: true\n    highlight-style: github\n    code-overflow: wrap\n---\n\nIt all started with the fact that I needed to be better at syncing raven repos to gannet (to save big files).\n\nso I started with a simple rsync command\n\n::: callout-note\n## ghr.sh\n\n```         \n#!/bin/bash\n\ncd /home/shared/8TB_HDD_01/sr320/github/\n\nrsync -avz . \\\nsr320@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n```\n:::\n\nI saved this then had to make it executable with `chmod +x ghr.sh`\n\nthen I ran it with `./ghr.sh` and it worked, prompting me for my password. Boy was I proud. The days of copying code and pasting in my terminal were over.\n\nBut could I do better? I am running a script lets get some system info so when I run the script I can have something fun to look at? So with a little chatgpt help\n\n::: callout-note\n## ghr.sh\n\n```         \n#!/bin/bash\n\ndf -h | grep -E \"/dev/sd[abdef]1\"\n\necho \"\"\necho \"Percent CPUs cranking?\"\n\nmpstat 1 1 | awk '/Average:/ {print 100 - $12 \"%\"}'\n\necho \"\"\necho \"Winners\"\n\nps aux | awk '{arr[$1]+=$3; mem[$1]+=$4} END {for (i in arr) {print i, arr[i], mem[i]\"%\"} }' | sort -nrk2 | head -n 5\n\necho \"\"\necho \"How much memory being used?\"\n\nfree | awk '/Mem:/ {printf \"%.2f%\\n\", $3/$2 * 100}'\n\necho \"\"\necho \"Where is my Memory?\"\n\nps aux --sort=-%mem | awk '{printf \"%s\\t%s\\t%.2f%\\n\", $1, $11, $4}' | head -n 5\n\ncd /home/shared/8TB_HDD_01/sr320/github/\n\nrsync -avz . \\\nsr320@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n```\n:::\n\nNow that I everytime I would run the script I would get the following before it asked be for a password.\n\n::: {.callout-tip appearance=\"minimal\" icon=\"false\"}\n```         \n/dev/sda1       916G   15M  870G   1% /media/1TB_ext_SSD01\n/dev/sdb1       916G   12K  870G   1% /media/1TB_ext_SSD02\n/dev/sde1       7.3T  4.2T  2.8T  61% /home/shared/8TB_HDD_01\n/dev/sdf1       7.3T  4.7T  2.3T  68% /home/shared/8TB_HDD_02\n/dev/sdd1       7.3T  3.1T  3.9T  45% /home/shared/8TB_HDD_03\n\nPercent CPUs cranking?\n45.01%\n\nWinners\nsr320 2061.8 0.9%\ndavnoor 20.2 0.7%\nece9 12.4 0.1%\nshedurk+ 11.8 0.7%\ngracele+ 9.6 2.8%\n\nHow much memory being used?\n6.32%\n\nWhere is my Memory?\nUSER    COMMAND 0.00%\ngracele+    /usr/lib/rstudio-server/bin/rsession    2.80%\ndavnoor /usr/lib/rstudio-server/bin/rsession    0.70%\nshedurk+    /usr/lib/rstudio-server/bin/rsession    0.70%\nsr320   /home/shared/hisat2-2.2.1/hisat2-align-s    0.70%\n```\n:::\n\nOk this was bettr, but then I said to myself, I should log this. So I created a new script.\n\n::: callout-note\n## status.sh\n\n```         \n#!/bin/bash\n\n# Temporary file for holding the new report\ntemp_file=\"temp_system_report.txt\"\n\n# Start of new report block\necho \"---------------------------------------------------\" >> $temp_file\necho \"Report generated on: $(date)\" > $temp_file\necho \"---------------------------------------------------\" >> $temp_file\n\necho \"Free Space\" >> $temp_file\ndf -h | grep -E \"/dev/sd[abdef]1\" >> $temp_file\n\necho \"\" >> $temp_file\necho \"Percent CPUs cranking?\" >> $temp_file\nmpstat 1 1 | awk '/Average:/ {print 100 - $12 \"%\"}' >> $temp_file\n\necho \"\" >> $temp_file\necho \"Winners (Top 5 CPU Users)\" >> $temp_file\nps aux | awk '{arr[$1]+=$3; mem[$1]+=$4} END {for (i in arr) {print i, arr[i], mem[i]\"%\"} }' | sort -nrk2 | head -n 5 >> $temp_file\n\necho \"\" >> $temp_file\necho \"How much memory being used?\" >> $temp_file\nfree | awk '/Mem:/ {printf \"%.2f%\\n\", $3/$2 * 100}' >> $temp_file\n\necho \"\" >> $temp_file\necho \"Where is my Memory? (Top 5 Memory Users)\" >> $temp_file\nps aux --sort=-%mem | awk '{printf \"%s\\t%s\\t%.2f%\\n\", $1, $11, $4}' | head -n 5 >> $temp_file\n\necho \"---------------------------------------------------\" >> $temp_file\n\n\n# Check if the main report file exists\nreport_file=\"system_report.txt\"\nif [ -f \"$report_file\" ]; then\n    # Append the old report to the new report\n    cat $report_file >> $temp_file\n    # Replace the old report with the new one\n    mv $temp_file $report_file\nelse\n    # Rename temp file as the report file if report doesn't exist\n    mv $temp_file $report_file\nfi\n\necho \"Updated report has been saved to $report_file.\"\n```\n:::\n\nI had to make this execeutable with `chmod +x status.sh` and then I ran it with `./status.sh` and it worked. I had a new file `system_report.txt` that had the system info, prepending itself.\n\n::: {.callout-tip appearance=\"minimal\" icon=\"false\"}\n```\nReport generated on: Sun May 26 06:40:35 PDT 2024\n---------------------------------------------------\nFree Space\n/dev/sda1       916G   15M  870G   1% /media/1TB_ext_SSD01\n/dev/sdb1       916G   12K  870G   1% /media/1TB_ext_SSD02\n/dev/sde1       7.3T  4.2T  2.8T  61% /home/shared/8TB_HDD_01\n/dev/sdf1       7.3T  4.7T  2.3T  68% /home/shared/8TB_HDD_02\n/dev/sdd1       7.3T  3.0T  3.9T  44% /home/shared/8TB_HDD_03\n\nPercent CPUs cranking?\n46%\n\nWinners (Top 5 CPU Users)\nsr320 1543.1 7.7%\ndavnoor 20.2 0.7%\nece9 12.4 0.1%\nshedurk+ 11.8 0.7%\ngracele+ 9.6 2.8%\n\nHow much memory being used?\n13.04%\n\nWhere is my Memory? (Top 5 Memory Users)\nUSER\tCOMMAND\t0.00%\nsr320\tjava\t7.50%\ngracele+\t/usr/lib/rstudio-server/bin/rsession\t2.80%\ndavnoor\t/usr/lib/rstudio-server/bin/rsession\t0.70%\nshedurk+\t/usr/lib/rstudio-server/bin/rsession\t0.70%\n---------------------------------------------------\nReport generated on: Sun May 26 06:39:37 PDT 2024\n---------------------------------------------------\nFree Space\n/dev/sda1       916G   15M  870G   1% /media/1TB_ext_SSD01\n/dev/sdb1       916G   12K  870G   1% /media/1TB_ext_SSD02\n/dev/sde1       7.3T  4.2T  2.8T  61% /home/shared/8TB_HDD_01\n/dev/sdf1       7.3T  4.7T  2.3T  68% /home/shared/8TB_HDD_02\n/dev/sdd1       7.3T  3.0T  3.9T  44% /home/shared/8TB_HDD_03\n\nPercent CPUs cranking?\n53.85%\n\nWinners (Top 5 CPU Users)\nsr320 1507 7.7%\ndavnoor 20.2 0.7%\nece9 12.4 0.1%\nshedurk+ 11.8 0.7%\ngracele+ 9.6 2.8%\n\nHow much memory being used?\n13.03%\n\nWhere is my Memory? (Top 5 Memory Users)\nUSER\tCOMMAND\t0.00%\nsr320\tjava\t7.50%\ngracele+\t/usr/lib/rstudio-server/bin/rsession\t2.80%\ndavnoor\t/usr/lib/rstudio-server/bin/rsession\t0.70%\nshedurk+\t/usr/lib/rstudio-server/bin/rsession\t0.70%\n```\n:::\n\nThen I thought this is something everyone is dying to see. \n\nSo I went onto modify `ghr.sh`.\n\n::: callout-note\n## ghr.sh\n\n```{bash, code-line-numbers=TRUE}\n#!/bin/bash\n\ndf -h | grep -E \"/dev/sd[abdef]1\"\n\necho \"\"\necho \"Percent CPUs cranking?\"\n\nmpstat 1 1 | awk '/Average:/ {print 100 - $12 \"%\"}'\n\necho \"\"\necho \"Winners\"\n\nps aux | awk '{arr[$1]+=$3; mem[$1]+=$4} END {for (i in arr) {print i, arr[i], mem[i]\"%\"} }' | sort -nrk2 | head -n 5\n\necho \"\"\necho \"How much memory being used?\"\n\nfree | awk '/Mem:/ {printf \"%.2f%\\n\", $3/$2 * 100}'\n\necho \"\"\necho \"Where is my Memory?\"\n\nps aux --sort=-%mem | awk '{printf \"%s\\t%s\\t%.2f%\\n\", $1, $11, $4}' | head -n 5\n\n/home/shared/8TB_HDD_03/sr320/github/status.sh\n\n\nrsync -avz -e ssh /home/shared/8TB_HDD_03/sr320/github/ \\\n--exclude='*.sam' \\\nsr320@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n\n\n#cd /home/shared/8TB_HDD_01/sr320/github/\n\n#rsync -avz . \\\n#sr320@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n\ndf -h | grep -E \"/dev/sd[abdef]1\"\n\necho \"\"\necho \"Percent CPUs cranking?\"\n\nmpstat 1 1 | awk '/Average:/ {print 100 - $12 \"%\"}'\n\necho \"\"\necho \"Winners\"\n\nps aux | awk '{arr[$1]+=$3; mem[$1]+=$4} END {for (i in arr) {print i, arr[i], mem[i]\"%\"} }' | sort -nrk2 | head -n 5\n\necho \"\"\necho \"How much memory being used?\"\n\nfree | awk '/Mem:/ {printf \"%.2f%\\n\", $3/$2 * 100}'\n\necho \"\"\necho \"Where is my Memory?\"\n\nps aux --sort=-%mem | awk '{printf \"%s\\t%s\\t%.2f%\\n\", $1, $11, $4}' | head -n 5\n```\n\n:::\n\n\n\n\n\nI thought, I should run this every day, so I added it to my crontab with `crontab -e`\n\n\\`\\`\\`bash\n\nthen I thought, I should run this every day, so I added it to my crontab with `crontab -e`\n\n\\`\\`\\`{bash} #!/bin/bash cd /home/shared/8TB_HDD_01/sr320/github/\n\nrsync -avz .\\\nsr320\\@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n\n\\`\\`\\`\\`\n\n#!/bin/bash\n\ndf -h \\| grep -E \"/dev/sd\\[abdef\\]1\"\n\necho \"\" echo \"Percent CPUs cranking?\"\n\nmpstat 1 1 \\| awk '/Average:/ {print 100 - \\$12 \"%\"}'\n\necho \"\" echo \"Winners\"\n\nps aux \\| awk '{arr\\[\\$1\\]+=\\$3; mem\\[\\$1\\]+=\\$4} END {for (i in arr) {print i, arr\\[i\\], mem\\[i\\]\"%\"} }' \\| sort -nrk2 \\| head -n 5\n\necho \"\" echo \"How much memory being used?\"\n\nfree \\| awk '/Mem:/ {printf \"%.2f%\\n\", \\$3/\\$2 \\* 100}'\n\necho \"\" echo \"Where is my Memory?\"\n\nps aux --sort=-%mem \\| awk '{printf \"%s\\t%s\\t%.2f%\\n\", $1, $11, $4}' | head -n 5\n\n/home/shared/8TB_HDD_03/sr320/github/status.sh\n\nrsync -avz -e ssh /home/shared/8TB_HDD_03/sr320/github/\\\n--exclude='\\*.sam'\\\nsr320\\@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n\n#cd /home/shared/8TB_HDD_01/sr320/github/\n\n#rsync -avz .\\\n#sr320\\@gannet.fish.washington.edu:/volume2/web/seashell/bu-github/\n\ndf -h \\| grep -E \"/dev/sd\\[abdef\\]1\"\n\necho \"\" echo \"Percent CPUs cranking?\"\n\nmpstat 1 1 \\| awk '/Average:/ {print 100 - \\$12 \"%\"}'\n\necho \"\" echo \"Winners\"\n\nps aux \\| awk '{arr\\[\\$1\\]+=\\$3; mem\\[\\$1\\]+=\\$4} END {for (i in arr) {print i, arr\\[i\\], mem\\[i\\]\"%\"} }' \\| sort -nrk2 \\| head -n 5\n\necho \"\" echo \"How much memory being used?\"\n\nfree \\| awk '/Mem:/ {printf \"%.2f%\\n\", \\$3/\\$2 \\* 100}'\n\necho \"\" echo \"Where is my Memory?\"\n\nps aux --sort=-%mem \\| awk '{printf \"%s\\t%s\\t%.2f%\\n\", \\$1, \\$11, \\$4}' \\| head -n 5\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}