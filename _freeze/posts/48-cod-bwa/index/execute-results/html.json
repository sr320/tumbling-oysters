{
  "hash": "474fe9aeefff53285634a4bfc7fdf505",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cod alignment\"\ndescription: \"bwa\"\ncategories: [cod, wgs]\n#citation: \ndate: 07-08-2025\nimage: http://gannet.fish.washington.edu/seashell/snaps/Monosnap_project-cod-temperature__RStudio_Server_2025-07-09_08-43-39.png # finding a good image\n\nauthor:\n  - name: Steven Roberts\n    url: \n    orcid: 0000-0001-8302-1138\n    affiliation: Professor, UW - School of Aquatic and Fishery Sciences\n    affiliation-url: https://robertslab.info\n  #url:  # self-defined\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: FALSE\n    code-tools: true\n    code-copy: true\n    highlight-style: github\n    code-overflow: wrap\n#runtime: shiny\n---\n\n\n\n\n\n# Genome\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ncd ../data\n\ncurl -O https://owl.fish.washington.edu/halfshell/genomic-databank/GCF_031168955.1_ASM3116895v1_genomic.fna\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nbwa index ../data/GCF_031168955.1_ASM3116895v1_genomic.fna\n```\n:::\n\n\n\n# Reads - getting on raven\n\necotype\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nmkdir -p ../data/fastq-ecotype\ncd ../data/fastq-ecotype\nwget -r -np -nd -A \"*.gz\" https://owl.fish.washington.edu/nightingales/G_macrocephalus/30-1149634506/00_fastq/\n```\n:::\n\n\n\n# Align\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n# Path to reference genome (must be indexed with bwa index)\nREFERENCE=\"../data/GCF_031168955.1_ASM3116895v1_genomic.fna\"\n\n# Number of threads per BWA job\nTHREADS=42\n\n\n# Directory containing fastq files\nFASTQ_DIR=\"../data/fastq-ecotype\"\n\n# Output directory (you can change this)\nOUT_DIR=\"../output/14-BWA\"\n\n# File suffixes\nR1_SUFFIX=\"_R1_001.fastq.gz\"\nR2_SUFFIX=\"_R2_001.fastq.gz\"\nOUT_SUFFIX=\".sam\"\n\n# -------------------------------\n# RUN BWA IN PARALLEL\n# -------------------------------\n# Run loop\nfor sample in $(ls \"${FASTQ_DIR}\"/*\"${R1_SUFFIX}\" | xargs -n 1 basename | sed \"s/${R1_SUFFIX}//\" | sort -u); do\n  R1_FILE=\"${FASTQ_DIR}/${sample}${R1_SUFFIX}\"\n  R2_FILE=\"${FASTQ_DIR}/${sample}${R2_SUFFIX}\"\n  OUT_FILE=\"${OUT_DIR}/${sample}${OUT_SUFFIX}\"\n\n  echo \"Running BWA on ${sample}...\"\n  bwa mem -t \"${THREADS}\" \"${REFERENCE}\" \"${R1_FILE}\" \"${R2_FILE}\" > \"${OUT_FILE}\"\ndone\n```\n:::\n\n\n\n# Convert SAM to BAM\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\n# Directory containing .sam files\nSAM_DIR=\"../output/14-BWA\"\n\n# Output directory (can be same as SAM_DIR or different)\nOUT_DIR=\"../output/14-BWA\"  # Change this if you want bams elsewhere\n\n\n# Number of threads for sorting\nTHREADS=42\n\n\n# Loop through all .sam files\nfor sam in \"${SAM_DIR}\"/*.sam; do\n  # Get base name (e.g., sample1)\n  sample=$(basename \"${sam}\" .sam)\n\n  # Define output file\n  sorted_bam=\"${OUT_DIR}/${sample}.sorted.bam\"\n\n  echo \"Converting $sam to $sorted_bam...\"\n\n  # Convert and sort\n  samtools view -@ $THREADS -bS \"$sam\" | samtools sort -@ $THREADS -o \"$sorted_bam\" -\n\n  # Index the sorted BAM\n  samtools index \"$sorted_bam\"\ndone\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}