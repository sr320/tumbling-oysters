{
  "hash": "87b322f581ad9bce90fecba69779724d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The lncRNA repertoire of Ptuh\"\ndescription: \"that's hit\"\ncategories: [lncRNA, e5]\n#citation: \ndate: 06-21-2025\nimage: http://gannet.fish.washington.edu/seashell/snaps/Monosnap_deep-dive-expression__RStudio_Server_2025-06-21_17-48-43.png # finding a good image\n\nauthor:\n  - name: Steven Roberts\n    url: \n    orcid: 0000-0001-8302-1138\n    affiliation: Professor, UW - School of Aquatic and Fishery Sciences\n    affiliation-url: https://robertslab.info\n  #url:  # self-defined\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: FALSE\n    code-tools: true\n    code-copy: true\n    highlight-style: github\n    code-overflow: wrap\n#runtime: shiny\n---\n\n\n\n\n\n\n# TLDR \n\nfasta - https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/Ptuh-lncRNA.fasta\n\ngtf - https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/Ptuh-lncRNA.gtf\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# URLs\nbed_url <- \"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.bed\"\ngtf_url <- \"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.gtf\"\nfasta_url <- \"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.fasta\"\n\n### BED file\nbed <- read_tsv(bed_url, col_names = c(\"chrom\", \"start\", \"end\"))\ncat(\"BED file head:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nBED file head:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(bed))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  chrom                                   start    end\n  <chr>                                   <dbl>  <dbl>\n1 Pocillopora_meandrina_HIv1___Sc0000000 130006 130942\n2 Pocillopora_meandrina_HIv1___Sc0000000 164394 165221\n3 Pocillopora_meandrina_HIv1___Sc0000000 164596 165221\n4 Pocillopora_meandrina_HIv1___Sc0000000 168916 182502\n5 Pocillopora_meandrina_HIv1___Sc0000000 245808 248612\n6 Pocillopora_meandrina_HIv1___Sc0000000 282742 283165\n```\n\n\n:::\n\n```{.r .cell-code}\n# Basic stats for BED\nbed$length <- bed$end - bed$start + 1\ncat(\"\\nBED file stats:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nBED file stats:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Number of features:\", nrow(bed), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of features: 16153 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Mean length:\", mean(bed$length), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean length: 3125.615 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Median length:\", median(bed$length), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian length: 702 \n```\n\n\n:::\n\n```{.r .cell-code}\n### GTF file\ngtf <- import(gtf_url, format = \"gtf\")\ncat(\"\\nGTF file head:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nGTF file head:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(gtf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGRanges object with 6 ranges and 5 metadata columns:\n                    seqnames        ranges strand |   source     type     score\n                       <Rle>     <IRanges>  <Rle> | <factor> <factor> <numeric>\n  [1] Pocillopora_meandrin.. 130006-130942      + |       NA   lncRNA        NA\n  [2] Pocillopora_meandrin.. 164394-165221      + |       NA   lncRNA        NA\n  [3] Pocillopora_meandrin.. 164596-165221      + |       NA   lncRNA        NA\n  [4] Pocillopora_meandrin.. 168916-182502      + |       NA   lncRNA        NA\n  [5] Pocillopora_meandrin.. 245808-248612      + |       NA   lncRNA        NA\n  [6] Pocillopora_meandrin.. 282742-283165      + |       NA   lncRNA        NA\n          phase     gene_id\n      <integer> <character>\n  [1]      <NA>  lncRNA_001\n  [2]      <NA>  lncRNA_002\n  [3]      <NA>  lncRNA_003\n  [4]      <NA>  lncRNA_004\n  [5]      <NA>  lncRNA_005\n  [6]      <NA>  lncRNA_006\n  -------\n  seqinfo: 175 sequences from an unspecified genome; no seqlengths\n```\n\n\n:::\n\n```{.r .cell-code}\n# Basic stats for GTF\ncat(\"\\nGTF file stats:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nGTF file stats:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Number of entries:\", length(gtf), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of entries: 16153 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Unique feature types:\", paste(unique(gtf$type), collapse = \", \"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnique feature types: lncRNA \n```\n\n\n:::\n\n```{.r .cell-code}\n### FASTA file\nfasta <- readDNAStringSet(fasta_url)\ncat(\"\\nFASTA file head:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFASTA file head:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(names(fasta)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:130007-130942\"\n[2] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:164395-165221\"\n[3] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:164597-165221\"\n[4] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:168917-182502\"\n[5] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:245809-248612\"\n[6] \"transcript::Pocillopora_meandrina_HIv1___Sc0000000:282743-283165\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(fasta[[1]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n6-letter DNAString object\nseq: GCCTTG\n```\n\n\n:::\n\n```{.r .cell-code}\n# Basic stats for FASTA\nseq_lengths <- width(fasta)\ncat(\"\\nFASTA file stats:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFASTA file stats:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Number of sequences:\", length(fasta), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of sequences: 16153 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Mean sequence length:\", mean(seq_lengths), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean sequence length: 3123.615 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Median sequence length:\", median(seq_lengths), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian sequence length: 700 \n```\n\n\n:::\n:::\n\n\n\n\n# Renaming fasta\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# File paths\nfasta_url <- \"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.fasta\"\ngtf_url <- \"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.gtf\"\n\n# Read in FASTA and GTF\nfasta <- readDNAStringSet(fasta_url)\ngtf <- import(gtf_url, format = \"gtf\")\n\n# Extract gene_id from GTF\ngene_ids <- sapply(mcols(gtf)$gene_id, function(x) gsub('\"', '', x))  # remove quotes\nunique_gene_ids <- unique(gene_ids)\n\n# Generate new FASTA headers\nnew_headers <- paste0(\"Ptuh_\", unique_gene_ids)\n\n# Confirm lengths match\nif (length(fasta) != length(new_headers)) {\n  stop(\"Mismatch between number of FASTA sequences and GTF gene IDs.\")\n}\n\n# Rename sequences\nnames(fasta) <- new_headers\n\n# Write new FASTA\nwriteXStringSet(fasta, filepath = \"lncRNA_renamed.fasta\", format = \"fasta\")\n\ncat(\"FASTA headers renamed and saved to lncRNA_renamed.fasta\\n\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ngrep \">\" lncRNA_renamed.fasta | head \n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Read renamed FASTA and original GTF\nfasta <- readDNAStringSet(\"lncRNA_renamed.fasta\")\ngtf <- import(\"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.gtf\", format = \"gtf\")\n\n# Extract gene IDs from GTF\ngtf_gene_ids <- unique(gsub('\"', '', mcols(gtf)$gene_id))  # remove quotes\n\n# Extract IDs from FASTA headers\nfasta_headers <- names(fasta)\nfasta_gene_ids <- gsub(\"^Ptuh_\", \"\", fasta_headers)\n\n# Compare\nall_match <- all(fasta_gene_ids %in% gtf_gene_ids) && all(gtf_gene_ids %in% fasta_gene_ids)\n\nif (all_match) {\n  cat(\"✅ FASTA headers match gene_ids in GTF exactly.\\n\")\n} else {\n  cat(\"❌ Mismatch found between FASTA headers and GTF gene_ids.\\n\")\n\n  # Optional: show what's missing\n  cat(\"\\nIn FASTA but not GTF:\\n\")\n  print(setdiff(fasta_gene_ids, gtf_gene_ids))\n\n  cat(\"\\nIn GTF but not FASTA:\\n\")\n  print(setdiff(gtf_gene_ids, fasta_gene_ids))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ FASTA headers match gene_ids in GTF exactly.\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Read files\nfasta <- readDNAStringSet(\"lncRNA_renamed.fasta\")\ngtf <- import(\"https://raw.githubusercontent.com/urol-e5/deep-dive-expression/refs/heads/main/F-Ptuh/output/17-Ptuh-lncRNA/lncRNA.gtf\", format = \"gtf\")\n\n# Clean gene_id and extract relevant fields\ngtf_df <- as.data.frame(gtf)\ngtf_df$gene_id <- gsub('\"', '', gtf_df$gene_id)\ngtf_summary <- gtf_df %>%\n  dplyr::select(seqnames, start, end, gene_id) %>%\n  dplyr::group_by(gene_id) %>%\n  dplyr::summarise(gtf_length = sum(end - start + 1), .groups = \"drop\")\n\n# Extract FASTA lengths\nfasta_df <- data.frame(\n  gene_id = gsub(\"^Ptuh_\", \"\", names(fasta)),\n  fasta_length = width(fasta),\n  fasta_header = names(fasta)\n)\n\n# Join and compare\nmerged <- dplyr::inner_join(gtf_summary, fasta_df, by = \"gene_id\")\n\n# Check consistency\nmerged$length_match <- merged$gtf_length == merged$fasta_length\n\n# Display a few examples\ncat(\"🔍 Sample GTF vs FASTA length comparison:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n🔍 Sample GTF vs FASTA length comparison:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(merged[, c(\"fasta_header\", \"gtf_length\", \"fasta_length\", \"length_match\")]), row.names = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  fasta_header    gtf_length fasta_length length_match\n  <chr>                <dbl>        <int> <lgl>       \n1 Ptuh_lncRNA_001        937          935 FALSE       \n2 Ptuh_lncRNA_002        828          826 FALSE       \n3 Ptuh_lncRNA_003        626          624 FALSE       \n4 Ptuh_lncRNA_004      13587        13585 FALSE       \n5 Ptuh_lncRNA_005       2805         2803 FALSE       \n6 Ptuh_lncRNA_006        424          422 FALSE       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Overall match rate\nmatch_rate <- mean(merged$length_match)\ncat(sprintf(\"\\n✅ Percent of exact matches: %.1f%%\\n\", 100 * match_rate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n✅ Percent of exact matches: 0.0%\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n# Code\n\n``` bash\n# Global R options\nknitr::opts_chunk$set(echo = TRUE)\n\n# Define key paths and tool directories\n \nDATA_DIR <- \"../data/17-Ptuh-lncRNA\"\nOUTPUT_DIR <- \"../output/17-Ptuh-lncRNA\"\nTHREADS <- \"24\"\n  \nFASTQ_SOURCE <- \"https://gannet.fish.washington.edu/Atumefaciens/20230519-E5_coral-fastqc-fastp-multiqc-RNAseq/P_meandrina/trimmed/\"\nFASTQ_SUFFIX <- \"fastq.gz\"\nGENOME_SOURCE <- \"https://owl.fish.washington.edu/halfshell/genomic-databank/Pocillopora_meandrina_HIv1.assembly.fasta\"\n\n\nGTF_SOURCE <- \"https://raw.githubusercontent.com/urol-e5/timeseries_molecular/d5f546705e3df40558eeaa5c18b122c79d2f4453/F-Ptua/data/Pocillopora_meandrina_HIv1.genes-validated.gtf\"\nGFF_SOURCE <- \"https://gannet.fish.washington.edu/seashell/bu-github/deep-dive-expression/F-Ptuh/data/Pocillopora_meandrina_HIv1.genes-validated.gff3\"\n\nGFFPATTERN <- 'class_code \"u\"|class_code \"x\"|class_code \"o\"|class_code \"i\"'\n\n#RAVEN\n# HISAT2_DIR <- \"/home/shared/hisat2-2.2.1/\"\n# SAMTOOLS_DIR <- \"/home/shared/samtools-1.12/\"\n# STRINGTIE_DIR <- \"/home/shared/stringtie-2.2.1.Linux_x86_64\"\n# GFFCOMPARE_DIR <- \"/home/shared/gffcompare-0.12.6.Linux_x86_64\"\n# BEDTOOLS_DIR <- \"/home/shared/bedtools2/bin\"\n# CPC2_DIR <- \"/home/shared/CPC2_standalone-1.0.1\"\n# CONDA_PATH <- \"/opt/anaconda/anaconda3/bin/conda\"\n\n#KLONE\nHISAT2_DIR <- \"\"\nSAMTOOLS_DIR <- \"\"\nSTRINGTIE_DIR <- \"\"\nGFFCOMPARE_DIR <- \"/srlab/programs/gffcompare-0.12.6.Linux_x86_64/\"\nBEDTOOLS_DIR <- \"\"\nCPC2_DIR <- \"/srlab/programs/CPC2_standalone-1.0.1/bin/\"\nCONDA_PATH <- \"/mmfs1/gscratch/srlab/nextflow/bin/miniforge/bin/conda\"\n\nGENOME_FASTA <- file.path(DATA_DIR, \"genome.fasta\")\nGENOME_GTF <- file.path(DATA_DIR, \"genome.gtf\")\nGENOME_GFF <- file.path(DATA_DIR, \"genome.gff\")\nFASTQ_DIR <- file.path(DATA_DIR, \"fastq\")\nGENOME_INDEX <- file.path(OUTPUT_DIR, \"genome.index\")\n\n# Export these as environment variables for bash chunks.\nSys.setenv(\n  THREADS = THREADS,\n  DATA_DIR = DATA_DIR,\n  FASTQ_SOURCE = FASTQ_SOURCE,\n  FASTQ_SUFFIX = FASTQ_SUFFIX,\n  OUTPUT_DIR = OUTPUT_DIR,\n  GENOME_SOURCE = GENOME_SOURCE,\n  GTF_SOURCE = GTF_SOURCE,\n  GFF_SOURCE = GFF_SOURCE,\n  HISAT2_DIR = HISAT2_DIR,\n  SAMTOOLS_DIR = SAMTOOLS_DIR,\n  STRINGTIE_DIR = STRINGTIE_DIR,\n  GFFCOMPARE_DIR = GFFCOMPARE_DIR,\n  BEDTOOLS_DIR = BEDTOOLS_DIR,\n  CPC2_DIR = CPC2_DIR,\n  CONDA_PATH = CONDA_PATH,\n  GENOME_FASTA = GENOME_FASTA,\n  GENOME_GTF = GENOME_GTF,\n  GENOME_GFF = GENOME_GFF,\n  FASTQ_DIR = FASTQ_DIR,\n  GENOME_INDEX = GENOME_INDEX,\n  GFFPATTERN = GFFPATTERN\n)\n```\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nmkdir -p \"${DATA_DIR}\"\nmkdir -p \"${OUTPUT_DIR}\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwget -nv -r \\\n--no-directories --no-parent \\\n-P ${FASTQ_DIR} \\\n-A \"*${FASTQ_SUFFIX}\" ${FASTQ_SOURCE}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nls ${FASTQ_DIR}\n```\n:::\n\n\n\n```\nRNA-POC-47-S1-TP2_R1_001.fastp-trim.20230519.fastq.gz\nRNA-POC-47-S1-TP2_R2_001.fastp-trim.20230519.fastq.gz\nRNA-POC-48-S1-TP2_R1_001.fastp-trim.20230519.fastq.gz\nRNA-POC-48-S1-TP2_R2_001.fastp-trim.20230519.fastq.gz\nRNA-POC-50-S1-TP2_R1_001.fastp-trim.20230519.fastq.gz\nRNA-POC-50-S1-TP2_R2_001.fastp-trim.20230519.fastq.gz\nRNA-POC-53-S1-TP2_R1_001.fastp-trim.20230519.fastq.gz\nRNA-POC-53-S1-TP2_R2_001.fastp-trim.20230519.fastq.gz\nRNA-POC-57-S1-TP2_R1_001.fastp-trim.20230519.fastq.gz\nRNA-POC-57-S1-TP2_R2_001.fastp-trim.20230519.fastq.gz\n```\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\ncurl -o \"${GENOME_FASTA}\" \"${GENOME_SOURCE}\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\n\ncurl -o \"${GENOME_GTF}\" \"${GTF_SOURCE}\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\n\ncurl -o \"${GENOME_GFF}\" \"${GFF_SOURCE}\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\noutput_fasta=$(head -1 \"${GENOME_FASTA}\")\noutput_gff=$(head -2 \"${GENOME_GFF}\")\noutput_gtf=$(head -1 \"${GENOME_GTF}\")\n\nif [[ \"$output_fasta\" == *html* || \"$output_gff\" == *html* || \"$output_gtf\" == *html* ]]; then\n    echo \"FAIL - FFS you downloaded a HTML not and genome feature file!\"\nelse\n    echo \"$output_fasta\"\n    echo \"$output_gff\"\n    echo \"$output_gtf\"\nfi\n```\n:::\n\n\n\n# HISAT\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\"${HISAT2_DIR}hisat2_extract_exons.py\" \"${GENOME_GTF}\" > \"${OUTPUT_DIR}/exon.txt\"\n\n\"${HISAT2_DIR}hisat2_extract_splice_sites.py\" \"${GENOME_GTF}\" > \"${OUTPUT_DIR}/splice_sites.txt\"\n\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\n\"${HISAT2_DIR}hisat2-build\" \\\n  -p \"${THREADS}\" \\\n  \"${GENOME_FASTA}\" \\\n  \"${GENOME_INDEX}\" \\\n  --exon \"${OUTPUT_DIR}/exon.txt\" \\\n  --ss \"${OUTPUT_DIR}/splice_sites.txt\" \\\n  2> \"${OUTPUT_DIR}/hisat2-build_stats.txt\"\n\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n# Loop over every file ending in .fastq.gz that contains \"_R2_\"\nfor r2 in \"${FASTQ_DIR}\"/*_R2_*.\"${FASTQ_SUFFIX}\"; do\n    # Get the basename (filename without path)\n    base=$(basename \"$r2\")\n    \n    # Derive a sample name by taking everything before \"_R2_\"\n    sample=\"${base%%_R2_*}\"\n    \n    # Construct the corresponding R1 filename by replacing \"_R2_\" with \"_R1_\"\n    r1=\"${r2/_R2_/_R1_}\"\n    \n    # Define the output SAM file name using the sample name\n    output=\"${OUTPUT_DIR}/${sample}.sam\"\n    \n    # Run hisat2 with the paired-end files\n    \"${HISAT2_DIR}hisat2\" \\\n      -x \"${GENOME_INDEX}\" \\\n      -p \"${THREADS}\" \\\n      -1 \"$r1\" \\\n      -2 \"$r2\" \\\n      -S \"$output\"\ndone\n```\n:::\n\n\n\n## convert SAM to BAM\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nfor samfile in \"${OUTPUT_DIR}/${sample}\"*.sam; do\n  bamfile=\"${samfile%.sam}.bam\"\n  sorted_bamfile=\"${samfile%.sam}.sorted.bam\"\n  \n  # Convert SAM to BAM\n  \"${SAMTOOLS_DIR}samtools\" view -bS -@ \"${THREADS}\" \"$samfile\" > \"$bamfile\"\n  \n  # Sort BAM\n  \"${SAMTOOLS_DIR}samtools\" sort -@ \"${THREADS}\" \"$bamfile\" -o \"$sorted_bamfile\"\n  \n  # Index sorted BAM\n  \"${SAMTOOLS_DIR}samtools\" index -@ \"${THREADS}\" \"$sorted_bamfile\"\ndone\n```\n:::\n\n\n\n# StringTie\n\nStringTie uses the sorted BAM files to assemble transcripts for each sample, outputting them as GTF (Gene Transfer Format) files. And then merges all individual GTF assemblies into a single merged GTF file. This step extracts transcript information and merges GTFs from all samples–an important step in creating a canonical list of lncRNAs across all samples included in the pipeline.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nfind \"${OUTPUT_DIR}\" -name \"*sorted.bam\" \\\n| xargs -n 1 basename -s .sorted.bam | xargs -I{} \\\n\"${STRINGTIE_DIR}stringtie\" \\\n-p \"${THREADS}\" \\\n-G \"${GENOME_GFF}\" \\\n-o \"${OUTPUT_DIR}/{}.gtf\" \\\n\"${OUTPUT_DIR}/{}.sorted.bam\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead ${OUTPUT_DIR}/*.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwc -l ${OUTPUT_DIR}/*.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\"${STRINGTIE_DIR}stringtie\" \\\n--merge \\\n-G \"${GENOME_GFF}\" \\\n-o \"${OUTPUT_DIR}/stringtie_merged.gtf\" \\\n\"${OUTPUT_DIR}/\"*.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwc -l ${OUTPUT_DIR}/stringtie_merged.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead ${OUTPUT_DIR}/stringtie_merged.gtf\n```\n:::\n\n\n\n#GFFCOMPARE\n\n![](http://gannet.fish.washington.edu/seashell/snaps/Monosnap_687474703a2f2f67616e6e65742e666973682e77617368696e67746f6e2e6564752f7365617368656c6c2f736e6170732f323032332d31312d30335f30392d3_2024-12-20_04-02-37.png)\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\"${GFFCOMPARE_DIR}gffcompare\" \\\n-r \"${GENOME_GFF}\" \\\n-o \"${OUTPUT_DIR}/gffcompare_merged\" \\\n\"${OUTPUT_DIR}/stringtie_merged.gtf\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead -4 \"${OUTPUT_DIR}\"/gffcompare_merged*\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwc -l \"${OUTPUT_DIR}\"/gffcompare_merged*\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\necho \"${GFFPATTERN}\"\necho \"${OUTPUT_DIR}\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nawk '$3 == \"transcript\" && $1 !~ /^#/' \"${OUTPUT_DIR}/gffcompare_merged.annotated.gtf\" | \\\ngrep -E \"${GFFPATTERN}\" | \\\nawk '($5 - $4 > 199) || ($4 - $5 > 199)' > \"${OUTPUT_DIR}/lncRNA_candidates.gtf\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead ${OUTPUT_DIR}/lncRNA_candidates.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwc -l ${OUTPUT_DIR}/lncRNA_candidates.gtf\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nsort ../output/17-Ptuh-lncRNA/lncRNA_candidates.gtf | uniq -d\n```\n:::\n\n\n\n\n\n\n# Bedtools\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\"${BEDTOOLS_DIR}\"bedtools getfasta \\\n-fi \"${GENOME_FASTA}\" \\\n-bed \"${OUTPUT_DIR}/lncRNA_candidates.gtf\" \\\n-fo \"${OUTPUT_DIR}/lncRNA_candidates.fasta\" \\\n-name -split\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead ${OUTPUT_DIR}/lncRNA_candidates.fasta\n```\n:::\n\n\n\n\n\n#CPC2\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nwget https://github.com/gao-lab/CPC2_standalone/archive/refs/tags/v1.0.1.zip\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nunzip v1.0.1.zip\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\neval \"$(/mmfs1/gscratch/srlab/nextflow/bin/miniforge/bin/conda shell.bash hook)\"\nconda activate /mmfs1/gscratch/srlab/nextflow/bin/miniforge/envs/nextflow  # replace with your actual env name\npython /mmfs1/gscratch/scrubbed/sr320/github/deep-dive-expression/F-Ptuh/code/CPC2_standalone-1.0.1/bin/CPC2.py \\\n  -i \"${OUTPUT_DIR}/lncRNA_candidates.fasta\" \\\n  -o \"${OUTPUT_DIR}/CPC2\"\n```\n:::\n\n\n\n\n\nFilter\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nawk '$8 == \"noncoding\" {print $1}' \"${OUTPUT_DIR}/CPC2.txt\" > \"${OUTPUT_DIR}/noncoding_transcripts_ids.txt\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead \"${OUTPUT_DIR}/CPC2.txt\"\nwc -l \"${OUTPUT_DIR}/CPC2.txt\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead \"${OUTPUT_DIR}/noncoding_transcripts_ids.txt\"\nwc -l \"${OUTPUT_DIR}/noncoding_transcripts_ids.txt\"\n```\n:::\n\n\n\nSubsetting fasta\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n\"${SAMTOOLS_DIR}samtools\" faidx \"${OUTPUT_DIR}/lncRNA_candidates.fasta\" \\\n-r \"${OUTPUT_DIR}/noncoding_transcripts_ids.txt\" \\\n> \"${OUTPUT_DIR}/lncRNA.fasta\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead -2 \"${OUTPUT_DIR}/lncRNA.fasta\"\ngrep -c \">\" \"${OUTPUT_DIR}/lncRNA.fasta\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\n# Define input and output file paths using the OUTPUT_DIR variable\ninput=\"${OUTPUT_DIR}/noncoding_transcripts_ids.txt\"\noutput=\"${OUTPUT_DIR}/lncRNA.bed\"\n\n# Process each line of the input file\nwhile IFS= read -r line; do\n    # Remove \"transcript::\" from the line\n    line=\"${line//transcript::/}\"\n    \n    # Split the line by ':' to get the chromosome and position string\n    IFS=':' read -r chromosome pos <<< \"$line\"\n    \n    # Split the position string by '-' to separate start and end positions\n    IFS='-' read -r start end <<< \"$pos\"\n    \n    # Convert the start position to 0-based by subtracting 1\n    start=$((start - 1))\n    \n    # Write the chromosome, updated start, and end positions to the output file (tab-separated)\n    printf \"%s\\t%s\\t%s\\n\" \"$chromosome\" \"$start\" \"$end\"\ndone < \"$input\" > \"$output\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead -1 \"${OUTPUT_DIR}/lncRNA.bed\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nawk 'BEGIN{OFS=\"\\t\"; count=1} {printf \"%s\\t.\\tlncRNA\\t%d\\t%d\\t.\\t+\\t.\\tgene_id \\\"lncRNA_%03d\\\";\\n\", $1, $2, $3, count++;}' \"${OUTPUT_DIR}/lncRNA.bed\" \\\n> \"${OUTPUT_DIR}/lncRNA.gtf\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\nhead \"${OUTPUT_DIR}/lncRNA.gtf\"\nwc -l \"${OUTPUT_DIR}/lncRNA.gtf\"\n```\n:::\n\n\n\n\n\n# Summary Table\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ntf_file=\"${OUTPUT_DIR}/lncRNA.gtf\"\n\nawk '\nBEGIN {\n    total_entries = 0;\n    min_length = 1e9;\n    max_length = 0;\n    sum_length = 0;\n}\n# Skip comment lines\n/^#/ { next }\n{\n    if (NF < 9) next;\n    total_entries++;\n    start = $4;\n    end = $5;\n    gene_length = end - start + 1;\n    if (gene_length < min_length) min_length = gene_length;\n    if (gene_length > max_length) max_length = gene_length;\n    sum_length += gene_length;\n    feature[$3]++;\n    chrom[$1]++;\n    # Use two-argument match() and then extract the gene_id manually.\n    if (match($9, /gene_id \"[^\"]+\"/)) {\n        gene_str = substr($9, RSTART, RLENGTH);\n        # Remove the \"gene_id \" prefix and the quotes.\n        gsub(/gene_id \"/, \"\", gene_str);\n        gsub(/\"/, \"\", gene_str);\n        genes[gene_str] = 1;\n    }\n}\nEND {\n    avg_length = (total_entries > 0) ? sum_length / total_entries : 0;\n    unique_gene_count = 0;\n    for (g in genes)\n        unique_gene_count++;\n    print \"Basic GTF File Statistics:\";\n    print \"--------------------------\";\n    print \"Total entries:      \" total_entries;\n    print \"Unique genes:       \" unique_gene_count;\n    print \"Min gene length:    \" min_length;\n    print \"Max gene length:    \" max_length;\n    printf(\"Average gene length: %.2f\\n\", avg_length);\n    print \"\\nFeature counts:\";\n    for (f in feature) {\n        print \"  \" f \": \" feature[f];\n    }\n    print \"\\nChromosome counts:\";\n    for (c in chrom) {\n        print \"  \" c \": \" chrom[c];\n    }\n}\n' \"$tf_file\"\n```\n:::\n\n\n\n\n```\nBasic GTF File Statistics:\n--------------------------\nTotal entries:      16153\nUnique genes:       0\nMin gene length:    203\nMax gene length:    227016\nAverage gene length: 3125.62\n\nFeature counts:\n  lncRNA: 16153\n\nChromosome counts:\n  Pocillopora_meandrina_HIv1___xfSc0000447: 7\n  Pocillopora_meandrina_HIv1___xfSc0000094: 2\n  Pocillopora_meandrina_HIv1___Sc0000041: 71\n  Pocillopora_meandrina_HIv1___xfSc0000343: 7\n  Pocillopora_meandrina_HIv1___xfSc0000004: 3\n  Pocillopora_meandrina_HIv1___Sc0000011: 362\n  Pocillopora_meandrina_HIv1___xfSc0000812: 1\n  Pocillopora_meandrina_HIv1___xfSc0000081: 2\n  Pocillopora_meandrina_HIv1___Sc0000032: 132\n  Pocillopora_meandrina_HIv1___xpSc0001344: 1\n  Pocillopora_meandrina_HIv1___xpSc0001331: 1\n  Pocillopora_meandrina_HIv1___xfSc0001179: 1\n  Pocillopora_meandrina_HIv1___xfSc0000284: 2\n  Pocillopora_meandrina_HIv1___xfSc0000692: 3\n  Pocillopora_meandrina_HIv1___xfSc0000029: 2\n  Pocillopora_meandrina_HIv1___Sc0000052: 3\n  Pocillopora_meandrina_HIv1___xfSc0000145: 2\n  Pocillopora_meandrina_HIv1___Sc0000046: 28\n  Pocillopora_meandrina_HIv1___xfSc0000948: 1\n  Pocillopora_meandrina_HIv1___Sc0000025: 274\n  Pocillopora_meandrina_HIv1___xfSc0000477: 2\n  Pocillopora_meandrina_HIv1___Sc0000066: 1\n  Pocillopora_meandrina_HIv1___Sc0000039: 96\n  Pocillopora_meandrina_HIv1___xpSc0001280: 5\n  Pocillopora_meandrina_HIv1___xfSc0001170: 1\n  Pocillopora_meandrina_HIv1___xfSc0000212: 7\n  Pocillopora_meandrina_HIv1___xfSc0000007: 36\n  Pocillopora_meandrina_HIv1___Sc0000012: 457\n  Pocillopora_meandrina_HIv1___xfSc0000974: 1\n  Pocillopora_meandrina_HIv1___xfSc0000817: 1\n  Pocillopora_meandrina_HIv1___xfSc0000570: 1\n  Pocillopora_meandrina_HIv1___xfSc0000479: 2\n  Pocillopora_meandrina_HIv1___xfSc0000237: 2\n  Pocillopora_meandrina_HIv1___Sc0000068: 2\n  Pocillopora_meandrina_HIv1___Sc0000037: 101\n  Pocillopora_meandrina_HIv1___Sc0000003: 803\n  Pocillopora_meandrina_HIv1___xfSc0000428: 4\n  Pocillopora_meandrina_HIv1___xfSc0000059: 6\n  Pocillopora_meandrina_HIv1___Sc0000057: 5\n  Pocillopora_meandrina_HIv1___xfSc0000146: 5\n  Pocillopora_meandrina_HIv1___Sc0000045: 52\n  Pocillopora_meandrina_HIv1___Sc0000009: 729\n  Pocillopora_meandrina_HIv1___xfSc0000952: 1\n  Pocillopora_meandrina_HIv1___xfSc0000835: 2\n  Pocillopora_meandrina_HIv1___xfSc0000000: 71\n  Pocillopora_meandrina_HIv1___Sc0000015: 328\n  Pocillopora_meandrina_HIv1___xfSc0000716: 1\n  Pocillopora_meandrina_HIv1___Sc0000080: 2\n  Pocillopora_meandrina_HIv1___xfSc0000616: 1\n  Pocillopora_meandrina_HIv1___Sc0000034: 118\n  Pocillopora_meandrina_HIv1___xpSc0001290: 1\n  Pocillopora_meandrina_HIv1___xfSc0000527: 2\n  Pocillopora_meandrina_HIv1___xfSc0000206: 6\n  Pocillopora_meandrina_HIv1___Sc0000006: 561\n  Pocillopora_meandrina_HIv1___xpSc0001273: 29\n  Pocillopora_meandrina_HIv1___xfSc0000540: 4\n  Pocillopora_meandrina_HIv1___Sc0000058: 5\n  Pocillopora_meandrina_HIv1___Sc0000021: 290\n  Pocillopora_meandrina_HIv1___xfSc0000859: 2\n  Pocillopora_meandrina_HIv1___Sc0000040: 123\n  Pocillopora_meandrina_HIv1___xfSc0000890: 1\n  Pocillopora_meandrina_HIv1___xfSc0000836: 1\n  Pocillopora_meandrina_HIv1___xfSc0000555: 2\n  Pocillopora_meandrina_HIv1___xfSc0000003: 15\n  Pocillopora_meandrina_HIv1___Sc0000016: 448\n  Pocillopora_meandrina_HIv1___xfSc0000765: 5\n  Pocillopora_meandrina_HIv1___Sc0000033: 112\n  Pocillopora_meandrina_HIv1___Sc0000018: 348\n  Pocillopora_meandrina_HIv1___xfSc0000415: 2\n  Pocillopora_meandrina_HIv1___Sc0000053: 14\n  Pocillopora_meandrina_HIv1___xfSc0000436: 4\n  Pocillopora_meandrina_HIv1___xfSc0000205: 13\n  Pocillopora_meandrina_HIv1___Sc0000070: 2\n  Pocillopora_meandrina_HIv1___Sc0000049: 4\n  Pocillopora_meandrina_HIv1___Sc0000005: 551\n  Pocillopora_meandrina_HIv1___xpSc0001276: 1\n  Pocillopora_meandrina_HIv1___Sc0000024: 245\n  Pocillopora_meandrina_HIv1___Sc0000065: 2\n  Pocillopora_meandrina_HIv1___xpSc0001281: 4\n  Pocillopora_meandrina_HIv1___xfSc0000006: 13\n  Pocillopora_meandrina_HIv1___Sc0000013: 555\n  Pocillopora_meandrina_HIv1___xfSc0001237: 2\n  Pocillopora_meandrina_HIv1___xfSc0000612: 2\n  Pocillopora_meandrina_HIv1___xfSc0000168: 3\n  Pocillopora_meandrina_HIv1___xfSc0000083: 2\n  Pocillopora_meandrina_HIv1___Sc0000030: 198\n  Pocillopora_meandrina_HIv1___Sc0000002: 725\n  Pocillopora_meandrina_HIv1___xfSc0000175: 3\n  Pocillopora_meandrina_HIv1___Sc0000054: 1\n  Pocillopora_meandrina_HIv1___xfSc0000565: 2\n  Pocillopora_meandrina_HIv1___Sc0000044: 51\n  Pocillopora_meandrina_HIv1___Sc0000008: 538\n  Pocillopora_meandrina_HIv1___Sc0000027: 291\n  Pocillopora_meandrina_HIv1___xfSc0000840: 1\n  Pocillopora_meandrina_HIv1___xfSc0000596: 2\n  Pocillopora_meandrina_HIv1___Sc0000060: 1\n  Pocillopora_meandrina_HIv1___xfSc0000763: 1\n  Pocillopora_meandrina_HIv1___Sc0000035: 227\n  Pocillopora_meandrina_HIv1___xfSc0000968: 2\n  Pocillopora_meandrina_HIv1___Sc0000001: 883\n  Pocillopora_meandrina_HIv1___xpSc0001355: 1\n  Pocillopora_meandrina_HIv1___xfSc0000699: 2\n  Pocillopora_meandrina_HIv1___xfSc0000655: 4\n  Pocillopora_meandrina_HIv1___xfSc0000426: 7\n  Pocillopora_meandrina_HIv1___Sc0000020: 294\n  Pocillopora_meandrina_HIv1___xfSc0000621: 2\n  Pocillopora_meandrina_HIv1___xfSc0000445: 2\n  Pocillopora_meandrina_HIv1___xfSc0000074: 1\n  Pocillopora_meandrina_HIv1___Sc0000043: 60\n  Pocillopora_meandrina_HIv1___xfSc0000837: 1\n  Pocillopora_meandrina_HIv1___xfSc0000288: 5\n  Pocillopora_meandrina_HIv1___xfSc0000217: 5\n  Pocillopora_meandrina_HIv1___xfSc0000002: 34\n  Pocillopora_meandrina_HIv1___Sc0000017: 382\n  Pocillopora_meandrina_HIv1___Sc0000019: 291\n  Pocillopora_meandrina_HIv1___xfSc0000012: 7\n  Pocillopora_meandrina_HIv1___Sc0000029: 178\n  Pocillopora_meandrina_HIv1___xfSc0000886: 3\n  Pocillopora_meandrina_HIv1___xfSc0000868: 3\n  Pocillopora_meandrina_HIv1___xfSc0000824: 8\n  Pocillopora_meandrina_HIv1___xfSc0000583: 1\n  Pocillopora_meandrina_HIv1___Sc0000071: 2\n  Pocillopora_meandrina_HIv1___Sc0000004: 652\n  Pocillopora_meandrina_HIv1___xfSc0000704: 4\n  Pocillopora_meandrina_HIv1___xfSc0000469: 3\n  Pocillopora_meandrina_HIv1___xfSc0000223: 2\n  Pocillopora_meandrina_HIv1___xfSc0000195: 1\n  Pocillopora_meandrina_HIv1___xfSc0000021: 2\n  Pocillopora_meandrina_HIv1___Sc0000023: 213\n  Pocillopora_meandrina_HIv1___xfSc0000264: 3\n  Pocillopora_meandrina_HIv1___Sc0000010: 615\n  Pocillopora_meandrina_HIv1___xfSc0001122: 3\n  Pocillopora_meandrina_HIv1___xfSc0000811: 1\n  Pocillopora_meandrina_HIv1___Sc0000031: 185\n  Pocillopora_meandrina_HIv1___xfSc0000788: 5\n  Pocillopora_meandrina_HIv1___xfSc0000875: 1\n  Pocillopora_meandrina_HIv1___xfSc0000488: 7\n  Pocillopora_meandrina_HIv1___xfSc0000017: 2\n  Pocillopora_meandrina_HIv1___Sc0000055: 12\n  Pocillopora_meandrina_HIv1___xfSc0001011: 2\n  Pocillopora_meandrina_HIv1___xfSc0000092: 6\n  Pocillopora_meandrina_HIv1___Sc0000047: 22\n  Pocillopora_meandrina_HIv1___xfSc0000482: 4\n  Pocillopora_meandrina_HIv1___xfSc0000132: 4\n  Pocillopora_meandrina_HIv1___xfSc0000024: 2\n  Pocillopora_meandrina_HIv1___Sc0000026: 271\n  Pocillopora_meandrina_HIv1___xfSc0000995: 1\n  Pocillopora_meandrina_HIv1___Sc0000067: 2\n  Pocillopora_meandrina_HIv1___Sc0000038: 93\n  Pocillopora_meandrina_HIv1___xfSc0000642: 1\n  Pocillopora_meandrina_HIv1___xfSc0000376: 1\n  Pocillopora_meandrina_HIv1___Sc0000082: 3\n  Pocillopora_meandrina_HIv1___xfSc0000975: 3\n  Pocillopora_meandrina_HIv1___xfSc0000760: 2\n  Pocillopora_meandrina_HIv1___Sc0000069: 1\n  Pocillopora_meandrina_HIv1___Sc0000036: 124\n  Pocillopora_meandrina_HIv1___xfSc0000275: 1\n  Pocillopora_meandrina_HIv1___Sc0000000: 922\n  Pocillopora_meandrina_HIv1___xfSc0000199: 2\n  Pocillopora_meandrina_HIv1___xfSc0000058: 1\n  Pocillopora_meandrina_HIv1___xfSc0000014: 1\n  Pocillopora_meandrina_HIv1___xfSc0000725: 5\n  Pocillopora_meandrina_HIv1___Sc0000042: 68\n  Pocillopora_meandrina_HIv1___xfSc0000892: 1\n  Pocillopora_meandrina_HIv1___xfSc0000001: 67\n  Pocillopora_meandrina_HIv1___Sc0000014: 378\n  Pocillopora_meandrina_HIv1___xfSc0000262: 3\n  Pocillopora_meandrina_HIv1___xfSc0000228: 4\n  Pocillopora_meandrina_HIv1___Sc0000051: 13\n  Pocillopora_meandrina_HIv1___Sc0000028: 208\n  Pocillopora_meandrina_HIv1___xfSc0000885: 5\n  Pocillopora_meandrina_HIv1___xfSc0000272: 5\n  Pocillopora_meandrina_HIv1___Sc0000007: 643\n  Pocillopora_meandrina_HIv1___xfSc0000705: 1\n  Pocillopora_meandrina_HIv1___Sc0000022: 231\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}